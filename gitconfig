[user]
    #email = me@iheartspam.com
	name = Mark Pictor
[color]
	ui = true
[core]
	autocrlf = input
	pager = less -x4
[push]
	default = simple
[alias]
    #branch
    #(TODO) look at `git config issue.pfx`; if it exists, use that. if not, ???
    ni = "! [[ \"$@\" -gt 0 ]] && git checkout master && git checkout -b LEDGE-$@ || echo aborted \\\"$@\\\" "
    nj = "! [[ \"$@\" != \"\" ]] && git checkout master && git checkout -b \"NO-JIRA-$(tr ' ' '-' <<<$@)\" || echo aborted \\\"$@\\\" "
    #push
    pu = ![[ $(git config "branch.$(git symbolic-ref --short HEAD).merge") = '' ]] && git push -u origin $(git symbolic-ref --short HEAD) || git push
    #master/pull/prune
    mpp = "!git checkout master && git pull && git cb"
    po = remote prune origin
    #better than po?
    cb = "!git fetch -p && for branch in `git branch -vv --no-color | grep ': gone]' | awk '{print $1}'`; do git branch -d $branch; done"
    #commit creation
    ic = "!f() { bname=\"[$(git symbolic-ref --short HEAD)] \"; printf '|%*s%*s\n' 43 '<- 80 ->' 36 '|'; read -i \"$bname\" -e && [[ ${#bname} -lt ${#REPLY} ]] && git commit -m \"$REPLY\" || echo aborted; }; f; unset f bname"
    nc = "!f() { bname=\"[NO-JIRA] \"; printf '|%*s%*s\n' 43 '<- 80 ->' 36 '|'; read -i \"$bname\" -e && [[ ${#bname} -lt ${#REPLY} ]] && git commit -m \"$REPLY\" || echo aborted; }; f; unset f bname"
    #misc
    ap = add -p
    s = status
    last = cat-file commit HEAD
    new = !gitk --all --not ORIG_HEAD
    #track = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
    #pu = ![[ $(git config "branch.$(git rev-parse --abbrev-ref HEAD).merge") = '' ]] && git push -u || git push
    rvs = remote -v show
